{"version":3,"sources":["components/burger/burgerIngre/BurgerIngre.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/burger/BuildControls/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/burger/BuildControls/BuildControls.module.css","components/UI/button/Button.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/burger/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.module.css","hoc/layout/layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/Toggle/sideToggle.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Aux/Aux.js","components/burger/burgerIngre/BurgerIngre.js","components/burger/Burger/Burger.js","components/burger/BuildControls/BuildControl.js","components/burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/button/Button.js","components/burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/WithErrorHandler/withErrorHandler.js","store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","containers/BurgerBuilder/BurgerBuilder.js","assests/image/logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/Toggle/SideMenuToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/layout/Layout.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","store/actions/auth.js","App.js","reportWebVitals.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","Aux","props","children","BurgerIngre","ingredient","type","className","classes","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngre","Object","keys","ingredients","map","igkey","Array","_","index","reduce","arr","el","concat","length","BuildControl","Label","label","onClick","remove","Less","disabled","disabledInfo","add","More","controls","BuildControls","price","toFixed","ctl","purchaseAble","OrderButton","ordered","Backdrop","show","clicked","Modal","nextProps","nextState","this","backdropHanlder","style","transform","opacity","Component","Button","btnType","join","OrderSummary","ingreSummary","confirm","cancel","instance","axios","create","baseURL","Spinner","loader","withErrorHandler","WrappedComponent","state","error","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","console","log","eject","message","ADD_INGREDIENTS","REMOVE_INGREDIENTS","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","initIngredient","dispatch","get","then","data","actionTypes","catch","purchaseBurger","orderData","post","id","orderId","purchaseBurgerSuccess","name","err","fetchOrders","fetchOrder","key","push","orders","BurgerBuilder","Ordered","loading","OrderHandler","continueOrder","onInitPurchase","history","onInitIngredients","sum","ings","orderSummary","burger","updateOrderNow","onIngredientAdded","onIngredientRemove","connect","burgerBuilder","totalPrice","ingredientName","burgerBuilderActions","Logo","src","logo","alt","NavigationItem","activeClassName","active","to","link","exact","NavigationItems","SideMenuToggle","DrawerToggle","Toolbar","shoSideM","Desktop","SideDrawer","attClass","Close","open","Open","closed","Layout","showSidebar","SideDrawerClosedHandler","prevState","Content","CheckoutSummary","width","margin","onCheckoutCancel","onCheckoutContinue","Input","inputElement","inputClasses","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","country","email","deliveryMethod","formIsValid","orderHandler","e","preventDefault","formData","formElement","p","order","onOrderBurger","changedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","inputIden","rules","isValid","trim","formElementsArray","config","form","onSubmit","event","actions","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","summary","purchasedRedirect","purchased","path","match","component","Order","ingred","ingre","amount","inOut","ig","textTransform","display","border","padding","Orders","onFetchOrders","Auth","isEmail","password","minLength","isSignUp","inputChangedHandler","controlName","updatedControls","onSubmitHandler","onAuth","switchAuthModeHandler","maxLength","test","isNumeric","method","authData","returnSecureToken","url","authSuccess","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","INGREDIENTS_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","BurgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ba70345.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngre_BreadBottom__1ux1Q\",\"BreadTop\":\"BurgerIngre_BreadTop__p4QOw\",\"Seeds1\":\"BurgerIngre_Seeds1__1EtvT\",\"Seeds2\":\"BurgerIngre_Seeds2__2kG_T\",\"Meat\":\"BurgerIngre_Meat__13npz\",\"Cheese\":\"BurgerIngre_Cheese__2A-p5\",\"Salad\":\"BurgerIngre_Salad__291C1\",\"Bacon\":\"BurgerIngre_Bacon__3naKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3wGgA\",\"Label\":\"BuildControl_Label__1xfdV\",\"Less\":\"BuildControl_Less__1NyXu\",\"More\":\"BuildControl_More__FejeP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"inputElement\":\"Input_inputElement__3nNe8\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"Desktop\":\"Toolbar_Desktop__QqjmX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControls_BuildControl__1h4En\",\"OrderButton\":\"BuildControls_OrderButton__1F-jd\",\"enable\":\"BuildControls_enable__1mnxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1UZXS\",\"Success\":\"Button_Success__3BQo6\",\"Danger\":\"Button_Danger__1YHSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1PwfL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__fTuX5\",\"load1\":\"Spinner_load1__1BXDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"layout_Content__3hmJz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"sideToggle_DrawerToggle__2SkPy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\",\"input\":\"ContactData_input__Q270U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\",\"input\":\"Auth_input__3biOv\",\"ContactData\":\"Auth_ContactData__24hjm\"};","\nconst Aux = (props) => props.children;\n\nexport default Aux;\n","import React from 'react';\nimport classes from './BurgerIngre.module.css'\nimport PropTypes from 'prop-types'\n\nconst BurgerIngre = (props) => {\n    let ingredient = null;\n    switch (props.type){\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n            <div className={classes.BreadTop}>\n                <div className={classes.Seeds1}></div>\n                <div className={classes.Seeds2}></div>\n            </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={classes.Meat}></div>\n            break;\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese}></div>\n            break;\n        case ('salad'):\n            ingredient = <div className={classes.Salad}></div>\n            break;\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon}></div>\n            break;\n        default:\n            ingredient = null;\n}\n\n    return ingredient;\n}\nBurgerIngre.propTypes = {\n    type:PropTypes.string.isRequired\n}\n\nexport default BurgerIngre;\n","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngre from '../burgerIngre/BurgerIngre';\nconst Burger = (props) => {\n    let transformedIngre = Object.keys(props.ingredients)\n    .map(igkey=>{\n        return [...Array(props.ingredients[igkey])].map((_,index)=>{\n            return <BurgerIngre key={igkey+index} type={igkey} />\n        })\n    }).reduce((arr,el)=>{\n        return arr.concat(el)\n    },[]);\n    if(transformedIngre.length===0){\n        transformedIngre=<p>add some ingredients</p>\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngre type=\"bread-top\"/>\n            {transformedIngre}\n            <BurgerIngre type=\"bread-bottom\"/>\n            \n        </div>\n    );\n}\n\nexport default Burger;\n","import React from 'react';\nimport classes from './BuildControl.module.css'\nconst BuildControl = (props) => {\n    return (\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button onClick={props.remove} className={classes.Less} disabled={props.disabledInfo} >Less</button>\n            <button onClick={props.add} className={classes.More}>More</button>\n        </div>\n    );\n}\n\nexport default BuildControl;\n","import React from 'react';\nimport classes from './BuildControls.module.css'\nimport BuildControl from './BuildControl'\nconst controls=[\n    {label:'Salad',type:'salad'},\n    {label:'Bacon',type:'bacon'},\n    {label:'Cheese',type:'cheese'},\n    {label:'Meat',type:'meat'}\n]\n\nconst BuildControls = (props) => {\n\n     return (\n        <div className={classes.BuildControl}>\n            <p>Price: {props.price.toFixed(2)}</p>\n            {controls.map(ctl => <BuildControl disabledInfo={props.disabledInfo[ctl.type]} type={ctl.type} add={()=>props.add(ctl.type)} remove={()=>props.remove(ctl.type)} key={ctl.label} label={ctl.label} /> )}\n            <button disabled={!props.purchaseAble} className={classes.OrderButton} onClick={props.ordered}>ORDER NOW</button>\n\n\n            \n        </div>\n    );\n}\n\nexport default BuildControls;\n","import React from 'react';\nimport classes from './Backdrop.module.css'\n\nconst Backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div>:null\n)\n\nexport default Backdrop;\n","\nimport classes from './Modal.module.css'\nimport Aux from '../../../hoc/Aux/Aux'\nimport Backdrop from '../Backdrop/Backdrop'\n\nimport React, { Component } from 'react';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps.show!== this.props.show || nextProps.children !== this.props.children;\n    }\n    \n\n    render() {\n        return (\n            <Aux>\n            <Backdrop show={this.props.show} clicked={this.props.backdropHanlder} />\n            <div className={classes.Modal} style={{\n                transform:this.props.show ? 'translateY(0)':'translateY(-100vh)',\n                opacity:this.props.show ? '1':'0'\n            }}>\n                {this.props.children}\n            </div>\n            </Aux>\n        );\n    }\n}\n\n\nexport default Modal;\n","import React from 'react';\nimport classes from './Button.module.css'\nconst Button = (props) => {\n    \n    return (\n        <button disabled={props.disabled} onClick={props.clicked} className={[classes.Button,classes[props.btnType]].join(' ')}>\n            {props.children}\n        </button>\n    );\n}\n\nexport default Button;\n","import React from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/button/Button'\n\nconst OrderSummary = (props) => {\n\n    const ingreSummary = Object.keys(props.ingredients).map(igkey=> {\n        return <li key={igkey}>{igkey} : {props.ingredients[igkey]} </li>\n    })\n\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients</p>\n            <ol type=\"I\">\n                {ingreSummary}\n\n            </ol>\n            <p>Total price is : $<strong> {props.price.toFixed(2)}</strong></p>\n            <i>Press continue to checkout</i><br/>\n            <Button btnType='Success' clicked={props.confirm}>Continue</Button>\n            <Button btnType='Danger' clicked={props.cancel}>Cancel</Button>\n\n        </Aux>\n    );\n}\n\nexport default OrderSummary;\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://burgerbuilder-f9ec6-default-rtdb.firebaseio.com/'\n});\nexport default instance;","import React from 'react';\nimport classes from './Spinner.module.css';\nconst Spinner = () => {\n    return (\n        <div className={classes.loader}>Loading...</div>\n    );\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentDidMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n        componentWillUnmount(){\n            console.log('will unmount',this.reqInterceptor,this.resInterceptor);\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        backdropHanlder={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","export const ADD_INGREDIENTS='ADD_INGREDIENTS';\nexport const REMOVE_INGREDIENTS='REMOVE_INGREDIENTS';\nexport const SET_INGREDIENTS='SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED='FETCH_INGREDIENTS_FAILED';\nexport const PURCHASE_BURGER_SUCCESS='PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL='PURCHASE_BURGER_FAIL';\nexport const PURCHASE_BURGER_START='PURCHASE_BURGER_START';\nexport const PURCHASE_INIT ='PURCHASE_INIT';\nexport const FETCH_ORDERS_INIT ='FETCH_ORDERS_INIT';\nexport const FETCH_ORDERS_START ='FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS ='FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL ='FETCH_ORDERS_FAIL';\nexport const AUTH_START ='AUTH_START';\nexport const AUTH_SUCCESS ='AUTH_SUCCESS';\nexport const AUTH_FAIL ='AUTH_FAIL';","import * as actionTypes from './actionTypes'\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name)=>{\n    return {\n        type: actionTypes.ADD_INGREDIENTS,\n        ingredientName:name\n    }\n}\nexport const removeIngredient = (name)=>{\n    return {\n        type: actionTypes.REMOVE_INGREDIENTS,\n        ingredientName:name\n    }\n}\n\n\nexport const setIngredients=(ingredients)=>{\n    return {\n        type:actionTypes.SET_INGREDIENTS,\n        ingredients:ingredients\n    }\n}\n\nexport const fetchIngredientsFailed=()=>{\n    return {\n        type:actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n\nexport const initIngredient=()=>{\n    return dispatch => {\n        axios.get('https://burgerbuilder-f9ec6-default-rtdb.firebaseio.com/ingredients.json')\n        .then(response=>{\n            dispatch(setIngredients(response.data))\n                })\n        .catch(error=>dispatch(fetchIngredientsFailed()))\n\n\n    }\n}","import * as actionTypes from './actionTypes'\nimport axios from '../../axios-orders'\n\nexport const purchaseBurgerSuccess = (id,orderData)=>{\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\nexport const purchaseBurgerStart=()=>{\n    return {\n        type:actionTypes.PURCHASE_BURGER_START\n    }\n}\n\n\n\n\nexport const purchaseBurger=(orderData) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart())\n        axios.post('/orders.json',orderData)\n        .then( res => {\n            dispatch(purchaseBurgerSuccess(res.data.name,orderData))\n        }\n\n        )\n        .catch(err => {\n            dispatch(purchaseBurgerFail(err))\n        } );\n\n    }\n\n}\nexport const purchaseInit = ()=>{\n    return {\n        type:actionTypes.PURCHASE_INIT\n    }\n}\nexport const fetchOrdersSuccess=(orders)=>{\n    return {\n        type:actionTypes.FETCH_ORDERS_SUCCESS,\n        orders:orders\n    }\n}\nexport const fetchOrdersFail=(error)=>{\n    return {\n        type:actionTypes.FETCH_ORDERS_FAIL,\n        error:error\n    }\n}\nexport const fetchOrdersStart=()=>{\n    return {\n        type:actionTypes.FETCH_ORDERS_START,\n        \n    }\n}\nexport const fetchOrders=()=>{\n    return dispatch =>{\n        dispatch(fetchOrdersStart())\n        axios.get('/orders.json')\n    .then(res => {\n        const fetchOrder=[];\n        for (let key in res.data){\n            fetchOrder.push({\n                ...res.data[key],\n                id: key\n            \n            });\n        }\n        dispatch(fetchOrdersSuccess(fetchOrder))\n    }).catch(err => dispatch(fetchOrdersFail(err)))\n\n\n    }\n    \n}\n    \n\n\n","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux'\nimport Burger from '../../components/burger/Burger/Burger'\nimport BuildControls from '../../components/burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/WithErrorHandler/withErrorHandler';\nimport {connect} from 'react-redux'\nimport * as burgerBuilderActions from '../../store/actions/index'\n\n\n\nclass BurgerBuilder extends Component {\n    state={\n        Ordered:false,\n        loading:false\n    }\n    componentDidMount() {\n        this.props.onInitIngredients()\n    }\n   \n    \n    updateOrderNow(ingredients){\n       \n        const sum = Object.keys(ingredients)\n        .map(igkey=>{\n            return ingredients[igkey]\n        }).reduce((sum,el)=>{\n            return sum+el;\n        },0)\n        return sum>0 \n    }\n    OrderHandler=()=>{\n        this.setState({Ordered:true})\n    }\n\n    \n    backdropHanlder=()=>{\n        this.setState({Ordered:false})\n    }\n    continueOrder=()=>{\n        //alert('this refers to continue')\n    this.props.onInitPurchase()\n    this.props.history.push('/checkout')\n    }\n\n    render() {\n        console.log(this.props.ings);\n        let orderSummary = null\n        \n        const disabledInfo = {\n            ...this.props.ings\n        }\n        for (let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        console.log(disabledInfo);\n        \n        let burger= this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner/>\n        \n        if(this.props.ings){\n            burger= (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls ordered={this.OrderHandler} purchaseAble={this.updateOrderNow(this.props.ings)} price={this.props.price} disabledInfo={disabledInfo} add={this.props.onIngredientAdded} remove={this.props.onIngredientRemove} />\n                </Aux>\n    \n            )\n            orderSummary=<OrderSummary price={this.props.price} confirm={this.continueOrder} cancel={this.backdropHanlder} ingredients={this.props.ings} />\n\n        }\n        if(this.state.loading){\n            orderSummary = <Spinner/>\n\n        }\n         \n        return (\n            <Aux>\n                \n                <Modal show={this.state.Ordered} backdropHanlder={this.backdropHanlder}>\n                {orderSummary}\n                </Modal>\n                {burger}\n               \n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state =>{\n    return {\n        ings:state.burgerBuilder.ingredients,\n        price:state.burgerBuilder.totalPrice,\n        error:state.burgerBuilder.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingredientName)=> dispatch(burgerBuilderActions.addIngredient(ingredientName)),\n        onIngredientRemove: (ingredientName)=> dispatch(burgerBuilderActions.removeIngredient(ingredientName)),\n        onInitIngredients: ()=> dispatch(burgerBuilderActions.initIngredient()),\n        onInitPurchase: ()=>dispatch(burgerBuilderActions.purchaseInit())\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps) (withErrorHandler(BurgerBuilder, axios));\n","export default __webpack_public_path__ + \"static/media/logo.ec69c7f6.png\";","import React from 'react';\nimport logo from '../../../src/assests/image/logo.png'\nimport classes from './Logo.module.css'\n\nconst Logo = () => {\n    return (\n        <div className={classes.Logo}>\n            <img src={logo} alt=\"myBurger\"/>\n        </div>\n    );\n}\n\nexport default Logo;\n","import React from 'react';\nimport classes from './NavigationItem.module.css'\nimport {NavLink} from 'react-router-dom'\n\nconst NavigationItem = (props) => {\n    return (\n        <li className={classes.NavigationItem}><NavLink activeClassName={classes.active} to={props.link} exact >{props.children}</NavLink></li>\n    );\n}\n\nexport default NavigationItem;\n","import React from 'react';\nimport classes from './NavigationItems.module.css'\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem'\nconst NavigationItems = () => {\n    return (\n        <ul className={classes.NavigationItems}>\n            <NavigationItem  link='/' > Burger builder </NavigationItem>\n            <NavigationItem link='/orders' > Orders </NavigationItem>\n            <NavigationItem link='/auth' > Authentication </NavigationItem>\n            \n            \n        </ul>\n    );\n}\n\nexport default NavigationItems;\n","\nimport React from 'react';\nimport classes from './sideToggle.module.css'\n\nconst SideMenuToggle = (props) => {\n    return (\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n}\n\nexport default SideMenuToggle;\n","import React from 'react';\nimport classes from './Toolbar.module.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Button from '../../UI/button/Button'\nimport SideMenuToggle from '../SideDrawer/Toggle/SideMenuToggle';\n\nconst Toolbar = (props) => {\n    return (\n        <header className={classes.Toolbar}>\n            <SideMenuToggle clicked={props.shoSideM} /> \n            <div className={classes.Logo}><Logo/></div>\n            \n            <nav className={classes.Desktop}>\n                <NavigationItems/>\n\n            </nav>\n        </header>\n    );\n}\n\nexport default Toolbar;\n","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css'\nimport Aux from '../../../hoc/Aux/Aux'\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nconst SideDrawer = (props) => {\n    let attClass=[classes.SideDrawer,classes.Close];\n    if(props.open){\n        attClass=[classes.SideDrawer,classes.Open];\n    }\n    return (\n        <Aux>\n        <Backdrop show={props.open} clicked={props.closed} />\n        <div className={attClass.join(' ')}>\n      <div className={classes.Logo}><Logo/></div>\n             <nav>\n            <NavigationItems/>\n            </nav>\n            \n        </div>\n        </Aux>\n    );\n}\n\nexport default SideDrawer;\n","import Aux from '../Aux/Aux';\nimport classes from './layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport { Component } from 'react';\nclass Layout extends Component{\n    state = {\n        showSidebar: false\n    }\n    SideDrawerClosedHandler=()=>{\n        this.setState((prevState)=>{\n            return {showSidebar:!prevState.showSidebar}\n        }\n        )\n    } \n    render(){\n        return (\n            <Aux>\n            <Toolbar shoSideM={this.SideDrawerClosedHandler}/>\n            <SideDrawer open={this.state.showSidebar} closed={this.SideDrawerClosedHandler} />\n            <div>Backdrop</div>\n            <main className={classes.Content}>\n                {this.props.children}\n            </main>\n            </Aux>\n        )\n    }\n    \n}\nexport default Layout;","import React from 'react';\nimport Burger from '../../burger/Burger/Burger'\n\nimport Button from '../../UI/button/Button'\nimport classes from './CheckoutSummary.module.css'\n\nconst CheckoutSummary = (props) => {\n\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1> we hope it tastes well</h1>\n            <div style={{width:'100%',margin:'auto'}}>\n                <Burger ingredients={props.ingredients} />\n\n            </div>\n            <Button btnType=\"Danger\" clicked={props.onCheckoutCancel}>Cancel</Button>\n            <Button btnType=\"Success\" clicked={props.onCheckoutContinue}>Continue</Button>\n            \n        </div>\n    );\n}\n\nexport default CheckoutSummary;\n","import React from 'react';\nimport classes from './Input.module.css'\nconst Input = (props) => {\n    let inputElement=null;\n    const inputClasses=[classes.inputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch (props.elementType){\n        case('input'):\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed} />\n            break;\n        case('textarea'):\n            inputElement = <textarea className={inputClasses.join(' ')}  {...props.elementConfig} value={props.value} onChange={props.changed} />\n            break;\n        case('select'):\n            inputElement =( \n                <select className={inputClasses.join(' ')}  \n                value={props.value} onChange={props.changed} >\n                    {props.elementConfig.options.map(option=>(\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\n                    ))}\n\n                </select>)\n            break;\n        default:\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed} />\n\n    }\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n            \n            \n        </div>\n    );\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport Button from '../../../components/UI/button/Button'\nimport classes from './ContactData.module.css'\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input';\nimport {connect} from 'react-redux'\nimport withErrorHandler from '../../../hoc/WithErrorHandler/withErrorHandler'\nimport * as actions from '../../../store/actions/index'\n\nclass ContactData extends Component {\n    state = {\n        orderForm:{\n            name: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Your Name'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n    \n            street: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Street'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            zipCode: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'ZIP CODE'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            country: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Country'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n      \n            email: {\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'Your Mail Address'\n                },\n                value: '',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            deliveryMethod : {\n                elementType:'select',\n                elementConfig:{\n                    options:[{value:'fastest',displayValue:'Fastest'},\n                            {value:'cheapest',displayValue:'Cheapest'}]           \n                },\n                value: 'fastest',\n                valid:true\n            },\n\n        },\n        formIsValid:false\n    }\n    checkValidity(value,rules){\n        let isValid=false;\n        if(!rules){\n            return true;\n        }\n        if(rules.required){\n            isValid=value.trim() !== '';\n\n        }\n        return isValid;\n\n    }\n    orderHandler=(e)=>{\n        e.preventDefault();\n        console.log(this.props.ings);\n       \n        const formData={};\n        for(let formElement in this.state.orderForm){\n            formData[formElement]=this.state.orderForm[formElement].value\n        }\n        const p=+this.props.price;\n        const order = {\n            ingredients: this.props.ings,\n            price: p.toFixed(2),\n            orderData:formData\n            \n            \n        }\n        this.props.onOrderBurger(order)\n        \n    \n    }\n    changedHandler=(e,inputIdentifier)=>{\n        const updatedOrderForm={\n            ...this.state.orderForm\n        }\n        const updatedFormElement={\n            ...updatedOrderForm[inputIdentifier]\n        }\n        updatedFormElement.value=e.target.value\n        updatedFormElement.valid=this.checkValidity(updatedFormElement.value,updatedFormElement.validation)\n        updatedFormElement.touched=true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid=true;\n        for(let inputIden in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIden].valid && formIsValid ;\n        }\n\n\n\n        this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid})\n\n    }\n    render() {\n        const formElementsArray =[];\n        for (let key in this.state.orderForm){\n            formElementsArray.push({\n                id:key,\n                config:this.state.orderForm[key]\n            })\n        }\n        let form=(\n            <form onSubmit={this.orderHandler}>\n            {formElementsArray.map(formElement => (\n                <Input key={formElement.id} elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value} \n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event)=>this.changedHandler(event,formElement.id)} />\n            ))}\n            \n            <Button btnType=\"Success\" disabled={!this.state.formIsValid}> Order </Button>\n            </form>\n        );\n        if(this.props.loading){\n            form=<Spinner/>;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your contact data</h4>\n                {form}\n                \n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        ings:state.burgerBuilder.ingredients,\n        price:state.burgerBuilder.totalPrice,\n        loading:state.order.loading\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return  {\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));\n","import React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport {Route,Redirect} from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\nimport {connect} from 'react-redux'\nimport * as actions from '../../store/actions/index'\n\n\nclass Checkout extends Component {\n\n   \n   \n    \n    checkoutCancelHandler=()=>{\n        this.props.history.goBack();\n    }\n    checkoutContinueHandler=()=>{\n        this.props.history.replace('/checkout/contact-data')\n    }\n    render() {\n        let summary= <Redirect to=\"/\"/>\n        \n        if (this.props.ings){\n            const purchasedRedirect= this.props.purchased ? <Redirect to='/'/> : null\n            summary=(\n            <div>\n                {purchasedRedirect}\n            <CheckoutSummary ingredients={this.props.ings}\n                \n            onCheckoutCancel={this.checkoutCancelHandler}\n            onCheckoutContinue={this.checkoutContinueHandler} />\n            <Route path={this.props.match.path + '/contact-data'} \n                component={ContactData}                />\n            </div>\n            )\n        }\n        return summary\n            \n                \n                \n    }\n}\nconst mapStateToProps = state => {\n    return {\n        ings:state.burgerBuilder.ingredients,\n        purchased:state.order.purchased\n    }\n}\n\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from 'react';\nimport classes from './Order.module.css'\nconst Order = (props) => {\n    const ingred=[];\n    for (let ingre in props.ingredients){\n        ingred.push({name:ingre,amount:props.ingredients[ingre]})\n    }\n    const inOut=ingred.map(ig=>{\n        return <span style={{textTransform:'capitalize',display:'inline-block',margin:'0 8px',border:'1px solid #ccc',padding:'5px'}} key={ig.name}>{ig.name} ({ig.amount})</span>\n    })\n    return (\n        <div className={classes.Order}> \n            <p>Ingredients : {inOut}</p>\n            <p>Price :<strong> ${props.price.toFixed(2)} </strong></p>\n        </div>\n    );\n}\n\nexport default Order;\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/WithErrorHandler/withErrorHandler'\nimport * as actions from '../../store/actions/index'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\n\nclass Orders extends Component {\n   \n    componentDidMount() {\n        this.props.onFetchOrders()\n        \n    }\n    \n    render() {\n        \n        return (\n            <div>\n                { this.props.loading ? <Spinner/> : this.props.orders.map((order)=>{\n                    return <Order key={order.id} ingredients={order.ingredients} price={+order.price} />\n                })}\n            </div>\n        );\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders : ()=> dispatch(actions.fetchOrders())\n    }\n}\nconst mapStateToProps = state=>{\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)( withErrorHandler(Orders,axios));\n","import React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input'\nimport Button from '../../components/UI/button/Button'\nimport classes from './Auth.module.css'\nimport * as actionTypes from '../../store/actions/index'\nimport {connect} from 'react-redux';\n\n\nclass Auth extends Component {\n    state = {\n        controls:{\n            email: {\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'Mail address'\n                },\n                value: '',\n                validation:{\n                    required:true,\n                    isEmail:true\n                },\n                valid:false,\n                touched:false\n            },\n            password: {\n                elementType:'input',\n                elementConfig:{\n                    type:'password',\n                    placeholder:'enter your password'\n                },\n                value: '',\n                validation:{\n                    required:true,\n                    minLength: 6\n                },\n                valid:false,\n                touched:false\n            },\n        },\n        isSignUp: true\n    }\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        };\n        this.setState({controls: updatedControls});\n    }\n    onSubmitHandler=(e)=>{\n        e.preventDefault();\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignUp)\n    }\n    switchAuthModeHandler=()=>{\n        this.setState(prevState=>{\n            return {isSignUp:!prevState.isSignUp}\n        })\n    }\n\n    render() {\n        const formElementsArray =[];\n        for (let key in this.state.controls){\n            formElementsArray.push({\n                id:key,\n                config:this.state.controls[key]\n            })\n        }console.log(formElementsArray);\n        const form = formElementsArray.map(formElement => {\n            return (<Input key={formElement.id} elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value} \n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event)=>this.inputChangedHandler(event,formElement.id)} />)\n        })\n        return (\n            <div className={classes.Auth}>\n                <form onSubmit={this.onSubmitHandler}>\n                {form}\n                <Button btnType=\"Success\" > Submit </Button>\n\n                </form>\n                <Button \n                clicked={this.switchAuthModeHandler}\n                btnType=\"Danger\" > Switch To {this.state.isSignUp ? 'Signin' : 'Signup'} </Button>\n            </div>\n        );\n    }\n}\nconst mapDispatchToProps = (dispatch)=> {\n    return {\n        onAuth:(email,password,isSignUp)=> dispatch(actionTypes.auth(email,password,isSignUp))\n    }\n}\n\nexport default connect(null,mapDispatchToProps) (Auth);\n","import * as actionTypes from './actionTypes';\nimport axios from 'axios'\n\nexport const authStart=()=>{\n    return {\n        type:actionTypes.AUTH_START\n    }\n}\nexport const authSuccess=(authData)=>{\n    return {\n        type:actionTypes.AUTH_SUCCESS,\n        authData:authData\n    }\n}\nexport const authFail=(error)=>{\n    return {\n        type:actionTypes.AUTH_FAIL,\n        error:error\n    }\n}\nexport const auth=(email,password,method)=>{\n    return dispatch => {\n        dispatch(authStart());\n        const authData={\n            email:email,\n            password:password,\n            returnSecureToken:true\n\n        }\n        let url='https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyC0dGJiHAsQ-hHTjJJdpoUxuHsZhBuhF0c        '\n        if (!method){\n            url='https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyC0dGJiHAsQ-hHTjJJdpoUxuHsZhBuhF0c           '\n        }\n        axios.post(url,authData)\n        .then(res=>{\n            console.log(res);\n            dispatch(authSuccess(res.data))\n        })\n        .catch(err=>{\n            console.log(err.request);\n            dispatch(authFail(err))\n        })\n    }\n}","import './App.css';\nimport {useState} from 'react'\n\nimport BurgerBuilder from '../src/containers/BurgerBuilder/BurgerBuilder'\nimport Layout from './hoc/layout/Layout';\nimport Checkout from './containers/Checkout/Checkout';\nimport {Route,Switch} from 'react-router-dom'\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Switch>\n        <Route path='/checkout' component={Checkout} />\n        <Route path='/orders' component={Orders} />\n        <Route path='/auth' component={Auth} /> \n        <Route path='/' component={BurgerBuilder} /> \n        \n        </Switch>\n             \n      </Layout>\n     \n      \n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n    ingredients:null,\n    totalPrice:4,\n    error:false\n}\n\nconst INGREDIENTS_PRICES={\n    salad:0.5,\n    cheese:0.4,\n    meat:1.3,\n    bacon:0.7  \n}\nconst reducer=(state=initialState,action)=>{\n    switch (action.type){\n        case actionTypes.ADD_INGREDIENTS:\n            return {\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    [action.ingredientName]:state.ingredients[action.ingredientName]+1\n                },\n                totalPrice: state.totalPrice+INGREDIENTS_PRICES[action.ingredientName]\n\n            }\n        case actionTypes.REMOVE_INGREDIENTS:\n            return {\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    [action.ingredientName]:state.ingredients[action.ingredientName]-1\n                },\n                totalPrice: state.totalPrice-INGREDIENTS_PRICES[action.ingredientName]\n\n\n            }\n        case actionTypes.SET_INGREDIENTS:\n            return {\n                ...state,\n                ingredients:{\n                    salad:action.ingredients.salad,\n                    bacon:action.ingredients.bacon,\n                    cheese:action.ingredients.cheese,\n                    meat:action.ingredients.meat\n                },\n                error:false,\n                totalPrice:4\n            }\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return {\n                ...state,\n                error:true\n            }\n\n        default:\n            return state;\n       \n\n    }\n\n}\n\nexport default reducer","import * as actionTypes from '../actions/actionTypes';\n\n\nconst initialState = {\n    orders:[],\n    loading:false,\n    purchased:false\n}\n\nconst reducer = (state=initialState,action)=>{\n    switch (action.type){\n        case actionTypes.PURCHASE_INIT:\n            return {\n                ...state,\n                purchased:false\n\n            }\n        case actionTypes.PURCHASE_BURGER_START:\n            return {\n                ...state,\n                loading:true\n            }\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = {\n                ...action.orderData,\n                id: action.orderId\n            }\n            return {\n                ...state,\n                loading:false,\n                purchased:true,\n                orders:state.orders.concat(newOrder),\n            }\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return{\n                ...state,\n                loading:false\n            }\n        case actionTypes.PURCHASE_BURGER_START:\n            return{\n                ...state,\n                loading:true\n            }\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return{\n                ...state,\n                orders:action.orders,\n                loading:false\n            }\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return{\n                ...state,\n                loading:false\n            }\n\n        default:\n            return state;\n    }\n    \n\n}\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware,compose,combineReducers} from 'redux'\nimport thunk from 'redux-thunk'\nimport BurgerBuilderReducer from './store/reducers/burgerBuilder'\nimport orderReducer from '../src/store/reducers/order';\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder:BurgerBuilderReducer,\n  order:orderReducer\n})\n\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app=(\n  <Provider store={store}>\n  <BrowserRouter><App/></BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}